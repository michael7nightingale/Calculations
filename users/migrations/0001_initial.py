# Generated by Django 4.2.1 on 2023-05-19 09:21

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('science', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=40, unique=True, verbose_name='Имя пользователя')),
                ('password', models.CharField(max_length=200, verbose_name='Хэшированный пароль')),
                ('email', models.CharField(max_length=100, unique=True, verbose_name='Электронная почта')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Scientist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plot_path', models.CharField(blank=True, null=True, verbose_name='Путь до графика')),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_counted', models.DateTimeField(auto_created=True, verbose_name='Время вычисления')),
                ('result', models.FloatField(verbose_name='Результат вычисления')),
                ('formula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='science.formula')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'История вычислений',
                'verbose_name_plural': 'Истории вычислений',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='scientist',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.scientist'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='FormulaRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True, verbose_name='Название отображения')),
                ('content', models.TextField(blank=True, verbose_name='Описание')),
                ('formula', models.CharField(max_length=100, null=True, verbose_name='Формула')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата запроса')),
                ('cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='science.category')),
                ('science', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='science.science')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Предложенная формула',
                'verbose_name_plural': 'Предложенные формулы',
                'unique_together': {('user', 'title')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together={('username', 'email')},
        ),
    ]
